-----------------------------------------------------------------------------
--  DATABASE SCHEMA
--
--  TABLE DPM_ROLE
--  Role's table
--
--  TABLE DPM_RESOURCE
--  Resource's table
--
--  TABLE DPM_USER_STATES
--  States for users
--
--  TABLE DPM_USER
--  User's table
--
--  TABLE DPM_USER_ROLE
--  Relationship between users and its roles
--
-----------------------------------------------------------------------------

-- TABLE DPM_ROLE
CREATE TABLE DPM_ROLE
(
    ROLE_ID        NUMERIC(2,0)     NOT NULL,
    ROLE_NAME      VARCHAR2(100)    NOT NULL,
    STATE          CHAR(1)          NOT NULL,
    RECORD_DATE    TIMESTAMP        NOT NULL
);

ALTER TABLE DPM_ROLE ADD CONSTRAINT DPM_ROLE_PK
PRIMARY KEY (ROLE_ID);

ALTER TABLE DPM_ROLE ADD CONSTRAINT DPM_ROLE_STATE_CK
CHECK (STATE IN ('A', 'I'));

CREATE TRIGGER DPM_ROLE_BI_TR
BEFORE INSERT ON DPM_ROLE
FOR EACH ROW ENABLE
BEGIN
    SELECT SYSDATE INTO :NEW.RECORD_DATE FROM DUAL;
END;
/

-- TABLE DPM_RESOURCE
CREATE TABLE DPM_RESOURCE
(
    RESOURCE_ID      NUMERIC(2,0)     NOT NULL,
    RESOURCE_NAME    VARCHAR2(100)    NOT NULL,
    STATE            CHAR(1)          NOT NULL,
    RECORD_DATE      TIMESTAMP        NOT NULL
);

ALTER TABLE DPM_RESOURCE ADD CONSTRAINT DPM_RESOURCE_PK
PRIMARY KEY (RESOURCE_ID);

ALTER TABLE DPM_RESOURCE ADD CONSTRAINT DPM_RESOURCE_STATE_CK
CHECK (STATE IN ('A', 'I'));

CREATE TRIGGER DPM_RESOURCE_BI_TR
BEFORE INSERT ON DPM_RESOURCE
FOR EACH ROW ENABLE
BEGIN
    SELECT SYSDATE INTO :NEW.RECORD_DATE FROM DUAL;
END;
/

-- TABLE DPM_USER_STATES
CREATE TABLE DPM_USER_STATES
(
    USER_STATE_ID    NUMERIC(2,0)     NOT NULL,
    DESCRIPTION      VARCHAR2(100)    NOT NULL
);

ALTER TABLE DPM_USER_STATES ADD CONSTRAINT DPM_USER_STATES_PK
PRIMARY KEY (USER_STATE_ID);

-- TABLE DPM_USER
CREATE TABLE DPM_USER
(
    USER_ID          NUMERIC(4,0)    NOT NULL,
    USERNAME         VARCHAR2(20)    NOT NULL,
    USER_STATE_ID    NUMERIC(2,0)    NOT NULL,
    USER_PASSWORD    VARCHAR2(60)    NOT NULL,
    EMAIL            VARCHAR2(50)    NOT NULL,
    TOKEN            VARCHAR2(30)    NULL,
    RECORD_DATE      TIMESTAMP       NOT NULL
);

ALTER TABLE DPM_USER ADD CONSTRAINT DPM_USER_PK
PRIMARY KEY (USER_ID);

ALTER TABLE DPM_USER ADD CONSTRAINT DPM_USER_UNIQUE
UNIQUE (USERNAME);

ALTER TABLE DPM_USER ADD CONSTRAINT DPM_USRS_FK_STATE
FOREIGN KEY (USER_STATE_ID) REFERENCES DPM_USER_STATES (USER_STATE_ID);

CREATE TRIGGER DPM_USER_BI_TR
BEFORE INSERT ON DPM_USER
FOR EACH ROW ENABLE
BEGIN
    SELECT SYSDATE INTO :NEW.RECORD_DATE FROM DUAL;
END;
/

-- TABLE DPM_USER_ROLE
CREATE TABLE DPM_USER_ROLE
(
    USER_ID    NUMERIC(4,0)    NOT NULL,
    ROLE_ID    NUMERIC(2,0)    NOT NULL
);

ALTER TABLE DPM_USER_ROLE ADD CONSTRAINT DPM_USER_ROLE_PK
PRIMARY KEY (USER_ID, ROLE_ID);

ALTER TABLE DPM_USER_ROLE ADD CONSTRAINT DPM_USR_ROLE_FK_USER_ID
FOREIGN KEY (USER_ID) REFERENCES DPM_USER (USER_ID);

ALTER TABLE DPM_USER_ROLE ADD CONSTRAINT DPM_USR_ROLE_FK_ROLE_ID
FOREIGN KEY (ROLE_ID) REFERENCES DPM_ROLE (ROLE_ID);

-- TABLE DPM_DB_USER_ROLE
-- When authentication is through db, username is not in DPM_USER
CREATE TABLE DPM_DB_USER_ROLE
(
    USERNAME    VARCHAR2(30 CHAR)    NOT NULL,
    ROLE_ID     NUMERIC(2,0)         NOT NULL
);

ALTER TABLE DPM_DB_USER_ROLE ADD CONSTRAINT DPM_DB_USR_ROLE_PK
PRIMARY KEY (USERNAME, ROLE_ID);

ALTER TABLE DPM_DB_USER_ROLE ADD CONSTRAINT DPM_DB_USR_ROLE_FK_ROLE_ID
FOREIGN KEY (ROLE_ID) REFERENCES DPM_ROLE (ROLE_ID);


-- BASIC DATA
INSERT INTO DPM_USER_STATES (USER_STATE_ID, DESCRIPTION) VALUES (1, 'Pending email');
INSERT INTO DPM_USER_STATES (USER_STATE_ID, DESCRIPTION) VALUES (2, 'Active');
